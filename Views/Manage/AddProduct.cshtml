@model Hurtownia.Models.EditProductViewModel
@{
    ViewBag.Title = "AddProduct";
    Layout = "~/Views/Shared/ManageLayout.cshtml";
}
@Styles.Render("~/Content/css")
<link href="@Url.Content("~/engine1/style.css")" rel="stylesheet" type="text/css" />
<hr />


<div>
    @if (Model.ConfirmSuccess.HasValue && Model.ConfirmSuccess.Value)
    {
        <div style="text-align: center; margin: 50px;">
            Pomyślnie wprowadzono zmiany!
        </div>
    }
    else
    
    {
         <span> @ViewData["data"]</span>
         <span> @ViewData["DateEnd"]</span>
        <span> @ViewData["ProductPrice"]</span>
        
    }
    @*naglowek enctype na multi*@
    @using (@Html.BeginForm("AddProduct", "Manage", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        //zabezp przez przeslaniem takiego formularza z innych stron
        @Html.AntiForgeryToken()

        <div class="error-summary-centered" style="color:red;">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })


        </div>

        @Html.HiddenFor(o => o.Product.ProductId)
        @Html.HiddenFor(o => o.Product.DateAdded)
        @Html.HiddenFor(o => o.Product.CoverFileName)

        <div style="text-align: center;">
            <table id="albumedit-address-table">
                <tr>
                    <td>@Html.LabelFor(o => o.Product.ProductName, "Nazwa produktu:")</td>
                    <td>@Html.TextBoxFor(o => o.Product.ProductName, new { Class = "form-control" })</td>
                    <td>@Html.ValidationMessageFor(o => o.Product.ProductName)</td>
                </tr>

                <tr>
                    <td>@Html.LabelFor(o => o.Product.ProductDescription, "Opis:")</td>
                    <td>@Html.TextAreaFor(o => o.Product.ProductDescription, new { Class = "form-control" })</td>
                    <td>@Html.ValidationMessageFor(o => o.Product.ProductDescription)</td>
                </tr>
                @*<tr>
                    <td>@Html.LabelFor(o => o.Product.ProductPrice, "Cena:")</td>
                    <td>@Html.TextBoxFor(o => o.Product.ProductPrice)</td>
                    <td>@Html.ValidationMessageFor(o => o.Product.ProductPrice)</td>
                </tr>*@

                <tr>
                    <td>@Html.LabelFor(o => o.Product.ProductPrice)</td>
                    <td>
                        @Html.TextBoxFor(o => o.Product.ProductPrice, new { Class = "form-control" })
                        @*//@Html.TextBoxFor(o => o.Product.ProductPrice, new { @data_val = "false" })*@
                    </td>
                    <td>
                        @*@Html.ValidationMessageFor(o => o.Product.ProductPrice)*@
                        @Html.ValidationMessageFor(model => model.Product.ProductPrice, "", new { @class = "text-danger" })
                    </td>
                </tr>

                @*<div class="form-group">
                    @Html.LabelFor(model => model.Product.ProductPrice, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Product.ProductPrice, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Product.ProductPrice, "", new { @class = "text-danger" })
                    </div>
                </div>*@



                <tr>
                    <td>@Html.LabelFor(o => o.Categories, "Kategoria:")</td>
                    @*pierwszy arg w drop to gdzie ma trafic,  drugi jak wyswietlic ta liste

                        co ma byc na stronie i co wyswietlac*@
                    <td>@Html.DropDownListFor(m => m.Product.CategoryId, new SelectList(Model.Categories, "CategoryId", "NameCategory", Model.Categories.First().CategoryId), new { Class = "form-control" })</td>
                    <td></td>
                </tr>

                <tr>
                    <td>@Html.LabelFor(o => o.Manufactures, "Producent:")</td>

                    <td>@Html.DropDownListFor(m => m.Product.ManufactureId, new SelectList(Model.Manufactures, "ManufactureId", "Name", Model.Manufactures.First().ManufactureId), new { Class = "form-control" })</td>
                    <td></td>
                </tr>


                <tr>
                    <td>@Html.LabelFor(o => o.Product.DateEnd, "Termin ważności:")</td>
                    <td>@Html.TextBoxFor(o => o.Product.DateEnd,  "{0:MM/dd/yyyy}", new {id="dateEnd", @Value = @DateTime.Now.ToShortDateString() , Class = "form-control" })</td>
                    <td>@Html.ValidationMessageFor(o => o.Product.DateEnd)</td>
                </tr>
   
                <tr>
                    <td>@Html.LabelFor(o => o.Product.Components, "Skład:")</td>
                    <td>@Html.TextAreaFor(o => o.Product.Components, new { Class = "form-control" })</td>
                    <td>@Html.ValidationMessageFor(o => o.Product.Components)</td>
                </tr>
                <tr>
                    <td>@Html.LabelFor(o => o.Product.Contraindications, "Przeciwwskazania:")</td>
                    <td>@Html.TextAreaFor(o => o.Product.Contraindications, new { Class = "form-control" })</td>
                    <td>@Html.ValidationMessageFor(o => o.Product.Contraindications)</td>
                </tr>
                <tr>
                    <td>@Html.LabelFor(o => o.Product.IsBestseller, "Bestseller:")</td>
                    <td>@Html.CheckBoxFor(o => o.Product.IsBestseller)</td>
                    <td></td>
                </tr>
                <tr>
                    <td>@Html.LabelFor(o => o.Product.Prescription, "Na recepte:")</td>
                    <td>@Html.CheckBoxFor(o => o.Product.Prescription)</td>
                    <td></td>
                </tr>
                @*jesli nie edytujemy to zaladuj zdjecie z pliku lok*@
                @if (ViewBag.EditMode == null || !ViewBag.EditMode)
                {
                    <tr>
                        <td>@Html.Label("Dodaj Zdjęcie ***")</td>
                        <td >

                            <div class="upload">
                                <input type="file" value="Dodaj zdjecie" name="file" class="btn btn-default" />
                            </div>

                        </td>
                    </tr>
                }

                <tr>
                    <td style="text-align: left">
                        @if (ViewBag.EditMode)
                        {
                            if (Model.Product.IsHidden)
                            {
                                @* A bit dangerous - CSRF. Nested form.. Need to use form attr or JS *@
                                <a class="btn btn-default" href="@Url.Action("UnhideProduct", "Manage", new { productId = Model.Product.ProductId })" style="display: block; margin-top: 15px; font-weight: bold;">
                                    Przywróć
                                </a>
                            }
                            else
                            {
                                @* A bit dangerous - CSRF. Nested form.. Need to use form attr or JS *@
                                <a class="btn btn-default" href="@Url.Action("HideProduct", "Manage", new { productId = Model.Product.ProductId })" style="display: block; margin-top: 15px; font-weight: bold;">
                                    Usuń
                                </a>
                            }
                        }
                    </td>

                    <td style="text-align: right;">

                        <input type="submit" value="Zapisz" class="btn btn-info"  style="height:40px;"/>

                    </td>
                    <td></td>

                </tr>
            </table>
        </div>
    }




 

</div>

@section ScriptsBottom
{

    <script src="~/Scripts/jquery-2.1.3.js"></script>
    <script src="~/Scripts/jquery.validate.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.js"></script>
}


<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.6/jquery.min.js" type="text/javascript"></script>
<script src="http://ajax.googleapis.com/ajax/libs/jqueryui/1.8/jquery-ui.min.js"
        type="text/javascript"></script>
<link href="http://ajax.googleapis.com/ajax/libs/jqueryui/1.8/themes/base/jquery-ui.css"
      rel="Stylesheet" type="text/css" />
<script type="text/javascript">
    $(function () {
        $("#dateEnd").datepicker({
            numberOfMonths: 1,
            onSelect: function (selected) {
                var dt = new Date(selected);
                dt.setDate(dt.getDate() + 1);
                //$("#txtTo").datepicker("option", "minDate", dt);
            }
        });
        
    });
</script>
